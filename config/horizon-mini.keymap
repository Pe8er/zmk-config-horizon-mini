/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define SYM 1
#define FUN 2

&lt {
    tapping-term-ms = <180>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&gresc>;
            key-positions = <0 1>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        combo_hyper {
            bindings = <&kp LS(LA(LC(LGUI)))>;
            key-positions = <20 21>;
        };

        combo_bckspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <18 19>;
        };

        combo_return {
            bindings = <&kp RETURN>;
            key-positions = <30 31>;
        };

        combo_alfred {
            bindings = <&kp LA(TAB)>;
            key-positions = <37 38>;
        };

        combo_slash {
            bindings = <&kp BACKSLASH>;
            key-positions = <8 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q    &kp W           &kp E             &kp R         &kp T                                         &kp Y      &kp U       &kp I      &kp O         &kp P
&kp A    &kp S           &kp D             &kp F         &kp G                                         &kp H      &kp J       &kp K      &kp L         &kp SEMICOLON
&kp Z    &kp X           &kp C             &kp V         &kp B             &kp ESCAPE   &kp BACKSPACE  &kp N      &kp M       &kp SLASH  &kp UP_ARROW  &kp SQT
&kp TAB  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 SPACE  &lt 2 RET      &kp COMMA  &kp PERIOD  &kp LEFT   &kp DOWN      &kp RIGHT
            >;
        };

        num_layer {
            bindings = <
&kp N1     &kp N2  &kp N3  &kp N4  &kp N5                  &kp N6     &kp N7     &kp N8        &kp N9     &kp N0
&kp GRAVE  &trans  &trans  &trans  &trans                  &kp MINUS  &kp EQUAL  &kp ASTERISK  &kp SLASH  &trans
&trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans        &kp HOME   &trans
&trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &kp PAGE_UP   &kp END    &kp PAGE_DOWN
            >;

            label = "Numbers";
        };

        sym_layer {
            bindings = <
&kp EXCL              &kp AT_SIGN           &kp HASH                                &kp DOLLAR  &kp PERCENT                  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS  &trans      &trans                       &trans     &trans         &trans        &kp LBKT              &kp RBKT
&trans                &trans                &trans                                  &trans      &trans       &trans  &trans  &trans     &trans         &kp BSLH      &kp LEFT_BRACE        &kp RIGHT_BRACE
&trans                &trans                &trans                                  &trans      &trans       &trans  &trans  &trans     &trans         &trans        &trans                &trans
            >;

            label = "Symbols";
        };

        sys_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans  &trans  &trans  &trans  &bt BT_CLR
&trans        &trans        &trans        &trans        &trans                        &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "System";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        System {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
